{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InterceptorService {\n  constructor() {\n    this.requestOption = {};\n  }\n  static #_ = this.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["InterceptorService","constructor","requestOption","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  requestOption:any = {}\n\n  // intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n  //   console.log(\"intercepto\")\n  //   this.requestOption = {\n  //     headers: new HttpHeaders({\n  //       //\"Content-Type\":\"application/json;charset=UTF-8\"\n  //     }), withCredentials:true\n  //   }\n\n  //   const reqClone = req.clone(this.requestOption)\n  //   return next.handle(reqClone)\n\n\n  // }\n\n}"],"mappings":";AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAA;IACA,KAAAC,aAAa,GAAO,EAAE;EADN;EAAC,QAAAC,CAAA,G;qBAFNH,kBAAkB;EAAA;EAAA,QAAAI,EAAA,G;WAAlBJ,kBAAkB;IAAAK,OAAA,EAAlBL,kBAAkB,CAAAM,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}