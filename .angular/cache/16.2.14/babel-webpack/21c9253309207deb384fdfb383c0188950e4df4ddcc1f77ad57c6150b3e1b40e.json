{"ast":null,"code":"export function sessionStorageSyncReducer(reducer) {\n  return (state, action) => {\n    const nextState = reducer(state, action);\n    sessionStorage.setItem('appState', JSON.stringify(nextState)); // Persist the entire app state to session storage\n    return nextState;\n  };\n}\nexport function rehydrateState() {\n  const savedState = sessionStorage.getItem('appState');\n  return savedState ? JSON.parse(savedState) : undefined;\n}","map":{"version":3,"names":["sessionStorageSyncReducer","reducer","state","action","nextState","sessionStorage","setItem","JSON","stringify","rehydrateState","savedState","getItem","parse","undefined"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\session-storage-sync.reducer.ts"],"sourcesContent":["import { ActionReducer, MetaReducer } from '@ngrx/store';\r\nimport { AppState } from './app.state'; // Adjust the import to your actual AppState interface\r\n\r\nexport function sessionStorageSyncReducer(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\r\n  return (state, action) => {\r\n    const nextState = reducer(state, action);\r\n    sessionStorage.setItem('appState', JSON.stringify(nextState)); // Persist the entire app state to session storage\r\n    return nextState;\r\n  };\r\n}\r\n\r\nexport function rehydrateState(): AppState {\r\n  const savedState = sessionStorage.getItem('appState');\r\n  return savedState ? JSON.parse(savedState) : undefined;\r\n}\r\n"],"mappings":"AAGA,OAAM,SAAUA,yBAAyBA,CAACC,OAAgC;EACxE,OAAO,CAACC,KAAK,EAAEC,MAAM,KAAI;IACvB,MAAMC,SAAS,GAAGH,OAAO,CAACC,KAAK,EAAEC,MAAM,CAAC;IACxCE,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/D,OAAOA,SAAS;EAClB,CAAC;AACH;AAEA,OAAM,SAAUK,cAAcA,CAAA;EAC5B,MAAMC,UAAU,GAAGL,cAAc,CAACM,OAAO,CAAC,UAAU,CAAC;EACrD,OAAOD,UAAU,GAAGH,IAAI,CAACK,KAAK,CAACF,UAAU,CAAC,GAAGG,SAAS;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}