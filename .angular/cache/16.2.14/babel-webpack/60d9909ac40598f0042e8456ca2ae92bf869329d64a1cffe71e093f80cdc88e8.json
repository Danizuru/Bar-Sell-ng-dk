{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { addItem, removeItem, clearCart } from './cart.actions';\nimport { initialCartState } from './cart.model';\nexport const cartReducer = createReducer(initialCartState, on(addItem, (state, {\n  item\n}) => {\n  const existingItem = state.items.find(i => i.id === item.id);\n  let updatedItems;\n  if (existingItem) {\n    updatedItems = state.items.map(i => i.id === item.id ? {\n      ...i,\n      quantity: i.quantity + item.quantity\n    } : i);\n  } else {\n    updatedItems = [...state.items, item];\n  }\n  const updatedTotalAmount = state.totalAmount + item.price * item.quantity;\n  return {\n    ...state,\n    items: updatedItems,\n    totalAmount: updatedTotalAmount\n  };\n}), on(removeItem, (state, {\n  itemId\n}) => {\n  const item = state.items.find(i => i.id === itemId);\n  if (!item) {\n    return state;\n  }\n  const updatedItems = state.items.filter(i => i.id !== itemId);\n  const updatedTotalAmount = state.totalAmount - item.price * item.quantity;\n  return {\n    ...state,\n    items: updatedItems,\n    totalAmount: updatedTotalAmount\n  };\n}), on(clearCart, state => ({\n  ...state,\n  items: [],\n  totalAmount: 0\n})));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}