{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MisdatosComponent = class MisdatosComponent {\n  ngOnInit() {\n    this.cargarTodas;\n    this.cargarTodas();\n  }\n  constructor(peticion) {\n    this.peticion = peticion;\n    this.email = \"\";\n    this.password = \"\";\n    this.nombre = \"\";\n    this.rol = '2';\n    this.direccion = \"\";\n    this.telefono = \"\";\n    this.estado = 1;\n    this.data = [];\n    this.Idusuario = \"\";\n    this.ciudad = \"\";\n  }\n  cargarTodas() {\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"/usuarios/misdatos\",\n      payload: {\n        email: this.email\n      }\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      this.nombre = res.data[0].nombre;\n      this.email = res.data[0].email;\n      this.estado = res.data[0].estado;\n      this.direccion = res.data[0].direccion;\n      this.telefono = res.data[0].telefono;\n      this.rol = res.data[0].rol;\n    });\n  }\n  ActualizarDatos(id) {\n    this.Idusuario = id;\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"/usuarios/actualizar\"\n    };\n    this.peticion.get(post.host + post.path + \"/\" + this.Idusuario).then(res => {\n      console.log(res);\n      this.email = res.data[0].email;\n      this.nombre = res.data[0].nombre;\n      this.estado = res.data[0].estado;\n      $('#modalNuevo').modal('show');\n    });\n  }\n};\nMisdatosComponent = __decorate([Component({\n  selector: 'app-misdatos',\n  templateUrl: './misdatos.component.html',\n  styleUrls: ['./misdatos.component.css']\n})], MisdatosComponent);","map":{"version":3,"names":["Component","MisdatosComponent","ngOnInit","cargarTodas","constructor","peticion","email","password","nombre","rol","direccion","telefono","estado","data","Idusuario","ciudad","post","host","urlHost","path","payload","Post","then","res","console","log","ActualizarDatos","id","get","$","modal","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\component\\misdatos\\misdatos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PeticionService } from '../../servicios/peticion.service';\n\n\ndeclare let $:any\ndeclare let Swal:any\n\n\n@Component({\n  selector: 'app-misdatos',\n  templateUrl: './misdatos.component.html',\n  styleUrls: ['./misdatos.component.css']\n})\nexport class MisdatosComponent implements OnInit{\n\n\n  ngOnInit(): void {\n    this.cargarTodas\n    this.cargarTodas()\n  }\n  \n  constructor (private peticion:PeticionService){}\n\n\n  email:string = \"\"\n  password:any = \"\"\n  nombre:string = \"\"\n  rol:string = '2'\n  direccion: any = \"\"\n  telefono:any = \"\"\n  estado:number = 1\n  data:any[] = []\n  Idusuario:String =\"\"\n  ciudad:String = \"\"\n  \n\n  cargarTodas(){\n\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"/usuarios/misdatos\",\n      payload:{\n        email:this.email\n      }\n    }\n  this.peticion.Post(post.host+post.path, post.payload).then(\n    (res:any) => {\n      console.log(res)\n\n      this.nombre = res.data[0].nombre\n      this.email = res.data[0].email\n      this.estado = res.data[0].estado\n      this.direccion = res.data[0].direccion\n      this.telefono = res.data[0].telefono\n      this.rol = res.data[0].rol\n\n    }\n  )\n }\n ActualizarDatos(id:string){\n  this.Idusuario =id\n  let post = {\n    host:this.peticion.urlHost,\n    path:\"/usuarios/actualizar\",\n    \n  }\nthis.peticion.get(post.host+post.path + \"/\" + this.Idusuario).then(\n  (res:any) => {\n    console.log(res)\n    this.email = res.data[0].email\n    this.nombre = res.data[0].nombre\n    this.estado = res.data[0].estado\n    $('#modalNuevo').modal('show')\n  }\n)\n\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW;IAChB,IAAI,CAACA,WAAW,EAAE;EACpB;EAEAC,YAAqBC,QAAwB;IAAxB,KAAAA,QAAQ,GAARA,QAAQ;IAG7B,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,QAAQ,GAAO,EAAE;IACjB,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,GAAG,GAAU,GAAG;IAChB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,QAAQ,GAAO,EAAE;IACjB,KAAAC,MAAM,GAAU,CAAC;IACjB,KAAAC,IAAI,GAAS,EAAE;IACf,KAAAC,SAAS,GAAS,EAAE;IACpB,KAAAC,MAAM,GAAU,EAAE;EAZ6B;EAe/CZ,WAAWA,CAAA;IAET,IAAIa,IAAI,GAAG;MACTC,IAAI,EAAC,IAAI,CAACZ,QAAQ,CAACa,OAAO;MAC1BC,IAAI,EAAC,oBAAoB;MACzBC,OAAO,EAAC;QACNd,KAAK,EAAC,IAAI,CAACA;;KAEd;IACH,IAAI,CAACD,QAAQ,CAACgB,IAAI,CAACL,IAAI,CAACC,IAAI,GAACD,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACI,OAAO,CAAC,CAACE,IAAI,CACvDC,GAAO,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAEhB,IAAI,CAACf,MAAM,GAAGe,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACL,MAAM;MAChC,IAAI,CAACF,KAAK,GAAGiB,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACP,KAAK;MAC9B,IAAI,CAACM,MAAM,GAAGW,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACD,MAAM;MAChC,IAAI,CAACF,SAAS,GAAGa,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACH,SAAS;MACtC,IAAI,CAACC,QAAQ,GAAGY,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACF,QAAQ;MACpC,IAAI,CAACF,GAAG,GAAGc,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACJ,GAAG;IAE5B,CAAC,CACF;EACF;EACAiB,eAAeA,CAACC,EAAS;IACxB,IAAI,CAACb,SAAS,GAAEa,EAAE;IAClB,IAAIX,IAAI,GAAG;MACTC,IAAI,EAAC,IAAI,CAACZ,QAAQ,CAACa,OAAO;MAC1BC,IAAI,EAAC;KAEN;IACH,IAAI,CAACd,QAAQ,CAACuB,GAAG,CAACZ,IAAI,CAACC,IAAI,GAACD,IAAI,CAACG,IAAI,GAAG,GAAG,GAAG,IAAI,CAACL,SAAS,CAAC,CAACQ,IAAI,CAC/DC,GAAO,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACjB,KAAK,GAAGiB,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACP,KAAK;MAC9B,IAAI,CAACE,MAAM,GAAGe,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACL,MAAM;MAChC,IAAI,CAACI,MAAM,GAAGW,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACD,MAAM;MAChCiB,CAAC,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;IAChC,CAAC,CACF;EAED;CACC;AAhEY7B,iBAAiB,GAAA8B,UAAA,EAL7B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWjC,iBAAiB,CAgE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}