{"ast":null,"code":"\"use strict\";\n\n// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n//   constructor(private http: HttpClient) { }\n//   urlHost:string = 'http://localhost:3000'\n//   Post(url:string, data:{}){\n//     let promise = new Promise ((resolve, reject) => {\n//       this.http.post(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//       })\n//     return promise\n//   }\n//   Put(url:string, data:{}){\n//     let promise = new Promise ((resolve, reject) => {\n//       this.http.put(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//     })\n//     return promise\n//   }\n//   delete(url:string, data:{}){\n//     let promise = new Promise ((resolve, reject) => {\n//       this.http.delete(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//     })\n//     return promise\n//   }\n//   get(url:string){\n//     let promise = new Promise ((resolve, reject) => {\n//       this.http.get(url).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//     })\n//     return promise\n//   }\n// }\n// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n//   private urlHost: string = \"http://localhost:3000\";\n//   constructor(private http: HttpClient) { }\n//   private handleError(error: any) {\n//     console.error('An error occurred:', error);\n//     return throwError('Something went wrong; please try again later.');\n//   }\n//   post(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('POST URL:', url);\n//     return this.http.post(url, data).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n//   put(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('PUT URL:', url);\n//     return this.http.put(url, data).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n//   delete(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('DELETE URL:', url);\n//     return this.http.request('delete', url, { body: data }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n//   get(endpoint: string): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('GET URL:', url);\n//     return this.http.get(url).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\peticion.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n\n//   constructor(private http: HttpClient) { }\n\n//   urlHost:string = 'http://localhost:3000'\n\n\n//   Post(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.post(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//       })\n//     return promise\n//   }\n\n//   Put(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.put(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   delete(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.delete(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   get(url:string){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.get(url).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n// }\n\n\n\n\n\n\n// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { Observable, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n//   private urlHost: string = \"http://localhost:3000\";\n\n//   constructor(private http: HttpClient) { }\n\n//   private handleError(error: any) {\n//     console.error('An error occurred:', error);\n//     return throwError('Something went wrong; please try again later.');\n//   }\n\n//   post(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('POST URL:', url);\n//     return this.http.post(url, data).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   put(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('PUT URL:', url);\n//     return this.http.put(url, data).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   delete(endpoint: string, data: any): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('DELETE URL:', url);\n//     return this.http.request('delete', url, { body: data }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   get(endpoint: string): Observable<any> {\n//     const url = `${this.urlHost}${endpoint}`;\n//     console.log('GET URL:', url);\n//     return this.http.get(url).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n// }\n\n"],"mappings":";;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}