{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeticionService {\n  constructor(http) {\n    this.http = http;\n    this.urlHost = \"http://localhost:3000\";\n  }\n  Post(url, data) {\n    let promise = new Promise((resolve, reject) => {\n      this.http.post(url, data).toPromise().then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n    return promise;\n  }\n  Put(url, data) {\n    let promise = new Promise((resolve, reject) => {\n      this.http.put(url, data).toPromise().then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n    return Promise;\n  }\n  delete(url, data) {\n    let promise = new Promise((resolve, reject) => {\n      this.http.delete(url, data).toPromise().then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n    return promise;\n  }\n  get(url) {\n    let promise = new Promise((resolve, reject) => {\n      this.http.get(url).toPromise().then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n    return promise;\n  }\n  static #_ = this.ɵfac = function PeticionService_Factory(t) {\n    return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeticionService,\n    factory: PeticionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PeticionService","constructor","http","urlHost","Post","url","data","promise","Promise","resolve","reject","post","toPromise","then","res","catch","error","Put","put","delete","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\peticion.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeticionService {\n\n  constructor(private http: HttpClient) { }\n\n  urlHost:string = \"http://localhost:3000\"\n\n\n  Post(url:string, data:{}){\n    \n    let promise = new Promise ((resolve, reject) => {\n\n      this.http.post(url,data).toPromise().then(\n        (res:any) => {\n          resolve(res)\n        }\n        ).catch((error) => {\n          reject(error)\n        })\n      })\n    return promise;\n  }\n  Put(url:string, data:{}){\n    \n    let promise = new Promise ((resolve, reject) => {\n\n      this.http.put(url,data).toPromise().then(\n        (res:any) => {\n          resolve(res)\n        }\n        ).catch((error) => {\n          reject(error)\n        })\n      \n\n    })\n    return Promise\n  }\n  delete(url:string, data:{}){\n    \n    let promise = new Promise ((resolve, reject) => {\n\n      this.http.delete(url,data).toPromise().then(\n        (res:any) => {\n          resolve(res)\n        }\n        ).catch((error) => {\n          reject(error)\n        })\n      \n\n    })\n    return promise\n  }\n  get(url:string){\n    \n    let promise = new Promise ((resolve, reject) => {\n\n      this.http.get(url).toPromise().then(\n        (res:any) => {\n          resolve(res)\n        }\n        ).catch((error) => {\n          reject(error)\n        })\n      \n\n    })\n    return promise\n  }\n  \n}\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,OAAO,GAAU,uBAAuB;EAFA;EAKxCC,IAAIA,CAACC,GAAU,EAAEC,IAAO;IAEtB,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAE,CAACC,OAAO,EAAEC,MAAM,KAAI;MAE7C,IAAI,CAACR,IAAI,CAACS,IAAI,CAACN,GAAG,EAACC,IAAI,CAAC,CAACM,SAAS,EAAE,CAACC,IAAI,CACtCC,GAAO,IAAI;QACVL,OAAO,CAACK,GAAG,CAAC;MACd,CAAC,CACA,CAACC,KAAK,CAAEC,KAAK,IAAI;QAChBN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;IACJ,OAAOT,OAAO;EAChB;EACAU,GAAGA,CAACZ,GAAU,EAAEC,IAAO;IAErB,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAE,CAACC,OAAO,EAAEC,MAAM,KAAI;MAE7C,IAAI,CAACR,IAAI,CAACgB,GAAG,CAACb,GAAG,EAACC,IAAI,CAAC,CAACM,SAAS,EAAE,CAACC,IAAI,CACrCC,GAAO,IAAI;QACVL,OAAO,CAACK,GAAG,CAAC;MACd,CAAC,CACA,CAACC,KAAK,CAAEC,KAAK,IAAI;QAChBN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IAGN,CAAC,CAAC;IACF,OAAOR,OAAO;EAChB;EACAW,MAAMA,CAACd,GAAU,EAAEC,IAAO;IAExB,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAE,CAACC,OAAO,EAAEC,MAAM,KAAI;MAE7C,IAAI,CAACR,IAAI,CAACiB,MAAM,CAACd,GAAG,EAACC,IAAI,CAAC,CAACM,SAAS,EAAE,CAACC,IAAI,CACxCC,GAAO,IAAI;QACVL,OAAO,CAACK,GAAG,CAAC;MACd,CAAC,CACA,CAACC,KAAK,CAAEC,KAAK,IAAI;QAChBN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IAGN,CAAC,CAAC;IACF,OAAOT,OAAO;EAChB;EACAa,GAAGA,CAACf,GAAU;IAEZ,IAAIE,OAAO,GAAG,IAAIC,OAAO,CAAE,CAACC,OAAO,EAAEC,MAAM,KAAI;MAE7C,IAAI,CAACR,IAAI,CAACkB,GAAG,CAACf,GAAG,CAAC,CAACO,SAAS,EAAE,CAACC,IAAI,CAChCC,GAAO,IAAI;QACVL,OAAO,CAACK,GAAG,CAAC;MACd,CAAC,CACA,CAACC,KAAK,CAAEC,KAAK,IAAI;QAChBN,MAAM,CAACM,KAAK,CAAC;MACf,CAAC,CAAC;IAGN,CAAC,CAAC;IACF,OAAOT,OAAO;EAChB;EAAC,QAAAc,CAAA,G;qBApEUrB,eAAe,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAf1B,eAAe;IAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}