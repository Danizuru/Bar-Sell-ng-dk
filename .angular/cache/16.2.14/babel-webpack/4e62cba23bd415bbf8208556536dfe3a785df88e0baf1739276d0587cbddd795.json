{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PeticionService = /*#__PURE__*/(() => {\n  class PeticionService {\n    constructor(http) {\n      this.http = http;\n      this.urlHost = '174.129.140.99:3000';\n    }\n    Post(url, data) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.post(url, data).toPromise().then(res => {\n          if (res.permisos == true) {\n            Swal.fire({\n              icon: \"Error\",\n              title: \"Error\",\n              text: res.mensaje\n            });\n          }\n          resolve(res);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n    Put(url, data) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.put(url, data).toPromise().then(res => {\n          resolve(res);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n    delete(url, data) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.delete(url, data).toPromise().then(res => {\n          resolve(res);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n    get(url) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(url).toPromise().then(res => {\n          resolve(res);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n    static #_ = this.ɵfac = function PeticionService_Factory(t) {\n      return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PeticionService,\n      factory: PeticionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PeticionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}