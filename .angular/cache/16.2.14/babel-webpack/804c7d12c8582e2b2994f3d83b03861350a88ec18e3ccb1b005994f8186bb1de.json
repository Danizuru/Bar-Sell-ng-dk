{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../menu/menu.component\";\nimport * as i2 from \"../menu/btncollide/btncollide.component\";\nexport class DashboardComponent {\n  ngOnInit() {\n    this.Grafico1();\n    this.Grafico2();\n  }\n  Grafico1() {\n    const ctx = document.getElementById('myChart');\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['#2196F3', '#8BC34A', '#FF9800', '#607d8b', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['#2196F3', '#8BC34A', '#FF9800', '#607d8b', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  Grafico2() {\n    const ctx = document.getElementById('myChart2');\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        datasets: [{\n          label: '# of Votes',\n          data: [12, 19, 3, 5, 2, 3],\n          backgroundColor: ['#2196F3', '#8BC34A', '#FF9800', '#607d8b', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['#2196F3', '#8BC34A', '#FF9800', '#607d8b', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[1, \"window\"], [1, \"parsel\", \"roboto-condensed-valemia-t\"], [1, \"window-table\"], [1, \"col-12\", \"col-md-6\"], [\"id\", \"myChart\", \"height\", \"300px\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵtext(3, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-btncollide\");\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n        i0.ɵɵelement(7, \"canvas\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i1.MenuComponent, i2.BtncollideComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DashboardComponent","ngOnInit","Grafico1","Grafico2","ctx","document","getElementById","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","_","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ndeclare var Chart:any\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\nngOnInit(): void {\n this.Grafico1() \n this.Grafico2()\n}\n\nGrafico1(){\n  const ctx = document.getElementById('myChart');\n\n  new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          '#2196F3',\n          '#8BC34A',\n          '#FF9800',\n          '#607d8b',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)'\n        ], // Colores de fondo de las barras\n        borderColor: [\n          '#2196F3',\n          '#8BC34A',\n          '#FF9800',\n          '#607d8b',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)'\n        ],  \n        borderWidth: 1\n      }]\n    },\n    options: {\n      \n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\n\nGrafico2(){\n  const ctx = document.getElementById('myChart2');\n\n  new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          '#2196F3',\n          '#8BC34A',\n          '#FF9800',\n          '#607d8b',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)'\n        ], // Colores de fondo de las barras\n        borderColor: [\n          '#2196F3',\n          '#8BC34A',\n          '#FF9800',\n          '#607d8b',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)'\n        ],  \n        borderWidth: 1\n      }]\n    },\n    options: {\n      \n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\n\n}\n","<!-- <tbody>\n    <tr *ngFor=\"let item of datos; let x = index \" >\n      <td> {{x}}</td>\n      <td> {{item.nombre}}</td>\n      <td> {{item.email}}</td>\n    </tr>\n  </tbody> -->\n\n\n  <app-menu></app-menu>\n  <div class=\"window\">\n  \n \n    <div class=\"parsel roboto-condensed-valemia-t\">Dashboard</div>\n      <app-btncollide></app-btncollide>\n  \n      <div class=\"window-table \">\n      <!-- Grafico2(){\n        const ctx = document.getElementById('myChart2');\n      \n        new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n            datasets: [{\n              label: '# of Votes',\n              data: [12, 19, 3, 5, 2, 3],\n              backgroundColor: [\n                '#2196F3',\n                '#8BC34A',\n                '#FF9800',\n                '#607d8b',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n              ], // Colores de fondo de las barras\n              borderColor: [\n                '#2196F3',\n                '#8BC34A',\n                '#FF9800',\n                '#607d8b',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n              ], // Colores de borde de las barras\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              y: {\n                beginAtZero: true // Comenzar el eje y en cero\n              }\n            }\n          }\n        });\n      } -->\n      <!--  -->\n      <div class=\"col-12 col-md-6\" >\n                  <canvas id=\"myChart\" height=\"300px\"></canvas>\n              </div>\n\n  </div>\n\n\n        \n    "],"mappings":";;;AASA,OAAM,MAAOA,kBAAkB;EAE/BC,QAAQA,CAAA;IACP,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,QAAQ,EAAE;EAChB;EAEAD,QAAQA,CAAA;IACN,MAAME,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAE9C,IAAIC,KAAK,CAACH,GAAG,EAAE;MACbI,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC9DC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1BI,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,0BAA0B,EAC1B,yBAAyB,CAC1B;UACDC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,wBAAwB,EACxB,uBAAuB,CACxB;UACDC,WAAW,EAAE;SACd;OACF;MACDC,OAAO,EAAE;QAEPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;EAEAhB,QAAQA,CAAA;IACN,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAE/C,IAAIC,KAAK,CAACH,GAAG,EAAE;MACbI,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC9DC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,YAAY;UACnBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1BI,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,0BAA0B,EAC1B,yBAAyB,CAC1B;UACDC,WAAW,EAAE,CACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,wBAAwB,EACxB,uBAAuB,CACxB;UACDC,WAAW,EAAE;SACd;OACF;MACDC,OAAO,EAAE;QAEPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBArFYpB,kBAAkB;EAAA;EAAA,QAAAqB,EAAA,G;UAAlBrB,kBAAkB;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAxB,GAAA;MAAA,IAAAwB,EAAA;QCA7BC,EAAA,CAAAC,SAAA,eAAqB;QACrBD,EAAA,CAAAE,cAAA,aAAoB;QAG6BF,EAAA,CAAAG,MAAA,gBAAS;QAAAH,EAAA,CAAAI,YAAA,EAAM;QAC5DJ,EAAA,CAAAC,SAAA,qBAAiC;QAEjCD,EAAA,CAAAE,cAAA,aAA2B;QA2CfF,EAAA,CAAAC,SAAA,gBAA6C;QACjDD,EAAA,CAAAI,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}