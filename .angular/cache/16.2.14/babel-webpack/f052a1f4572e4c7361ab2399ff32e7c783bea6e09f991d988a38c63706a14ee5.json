{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeticionService {\n  constructor(http) {\n    this.http = http;\n    this.urlHost = \"http://localhost:3000\";\n  }\n  post(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('POST URL:', url);\n    return this.http.post(url, data);\n  }\n  put(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('PUT URL:', url);\n    return this.http.put(url, data);\n  }\n  delete(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('DELETE URL:', url);\n    return this.http.request('delete', url, {\n      body: data\n    });\n  }\n  get(endpoint) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('GET URL:', url);\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function PeticionService_Factory(t) {\n    return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeticionService,\n    factory: PeticionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PeticionService","constructor","http","urlHost","post","endpoint","data","url","console","log","put","delete","request","body","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\peticion.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n\n//   constructor(private http: HttpClient) { }\n\n//   urlHost:string = 'http://localhost:3000'\n\n\n//   Post(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.post(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//       })\n//     return promise\n//   }\n\n//   Put(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.put(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   delete(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.delete(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   get(url:string){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.get(url).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n// }\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeticionService {\n  private urlHost: string = \"http://localhost:3000\";\n\n  constructor(private http: HttpClient) { }\n\n  post(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('POST URL:', url);\n    return this.http.post(url, data);\n  }\n\n  put(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('PUT URL:', url);\n    return this.http.put(url, data);\n  }\n\n  delete(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('DELETE URL:', url);\n    return this.http.request('delete', url, { body: data });\n  }\n\n  get(endpoint: string): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('GET URL:', url);\n    return this.http.get(url);\n  }\n}\n"],"mappings":";;AAyFA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAW,uBAAuB;EAET;EAExCC,IAAIA,CAACC,QAAgB,EAAEC,IAAS;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,GAAGE,QAAQ,EAAE;IACxCG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,GAAG,CAAC;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACE,IAAI,CAACG,GAAG,EAAED,IAAI,CAAC;EAClC;EAEAI,GAAGA,CAACL,QAAgB,EAAEC,IAAS;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,GAAGE,QAAQ,EAAE;IACxCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAACH,GAAG,EAAED,IAAI,CAAC;EACjC;EAEAK,MAAMA,CAACN,QAAgB,EAAEC,IAAS;IAChC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,GAAGE,QAAQ,EAAE;IACxCG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,GAAG,CAAC;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACU,OAAO,CAAC,QAAQ,EAAEL,GAAG,EAAE;MAAEM,IAAI,EAAEP;IAAI,CAAE,CAAC;EACzD;EAEAQ,GAAGA,CAACT,QAAgB;IAClB,MAAME,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,GAAGE,QAAQ,EAAE;IACxCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAAC;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACY,GAAG,CAACP,GAAG,CAAC;EAC3B;EAAC,QAAAQ,CAAA,G;qBA3BUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}