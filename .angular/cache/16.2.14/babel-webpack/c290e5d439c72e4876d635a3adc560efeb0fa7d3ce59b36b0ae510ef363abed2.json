{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeticionService {\n  constructor(http) {\n    this.http = http;\n    this.urlHost = 'http://localhost:3000';\n  }\n  static #_ = this.ɵfac = function PeticionService_Factory(t) {\n    return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeticionService,\n    factory: PeticionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PeticionService","constructor","http","urlHost","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\peticion.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeticionService {\n\n  constructor(private http: HttpClient) { }\n\n  urlHost:string = 'http://localhost:3000'\n\n\n//   Post(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.post(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//       })\n//     return promise\n//   }\n//   Put(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.put(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n//   delete(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.delete(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n//   get(url:string){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.get(url).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n  \n// }\n"],"mappings":";;AAMA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,OAAO,GAAU,uBAAuB;EAFA;EAAC,QAAAC,CAAA,G;qBAF9BJ,eAAe,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfT,eAAe;IAAAU,OAAA,EAAfV,eAAe,CAAAW,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}