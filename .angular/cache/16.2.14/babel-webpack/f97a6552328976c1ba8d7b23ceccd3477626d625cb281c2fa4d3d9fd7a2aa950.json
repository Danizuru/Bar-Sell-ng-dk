{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegistroComponent = class RegistroComponent {\n  constructor(peticion, router) {\n    this.peticion = peticion;\n    this.router = router;\n    this.nombre = \"\";\n    this.email = \"\";\n    this.password = \"\";\n    this.confpassword = \"\";\n    this.datos = [];\n    this.visible = true;\n    this.changetype = true;\n  }\n  ngOnInit() {}\n  registrar() {\n    let post = {\n      Host: this.peticion.urlHost,\n      path: \"/usuarios/registro\",\n      payload: {\n        nombre: this.nombre,\n        email: this.email,\n        password: this.password,\n        confpassword: this.confpassword,\n        estado: 0\n      }\n    };\n    this.peticion.Post(post.Host + post.path, post.payload).then(res => {\n      console.log(res);\n      if (res.state == true) {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Bienvenido!\",\n          text: res.mensaje\n        });\n        this.router.navigate([\"login\"]);\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Ouuch!\",\n          text: res.mensaje\n        });\n      }\n    });\n  }\n  viewpass() {\n    this.visible = !this.visible;\n    this.changetype = !this.changetype;\n  }\n};\nRegistroComponent = __decorate([Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})], RegistroComponent);","map":{"version":3,"names":["Component","RegistroComponent","constructor","peticion","router","nombre","email","password","confpassword","datos","visible","changetype","ngOnInit","registrar","post","Host","urlHost","path","payload","estado","Post","then","res","console","log","state","Swal","fire","icon","title","text","mensaje","navigate","viewpass","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\component\\registro\\registro.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PeticionService } from '../../servicios/peticion.service';\n\n\ndeclare let Swal:any\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit{\n\n  constructor(private peticion:PeticionService , private router:Router ){\n    \n  }\n\n\n  ngOnInit(): void {\n   \n  }\n\n  nombre:string = \"\"\n  email:any = \"\"\n  password:any = \"\"\n  confpassword:any = \"\"\n  datos:any[] = []\n  visible:boolean = true;\n  changetype:boolean =true;\n\n  \nregistrar(){\n\n  let post = {\n    Host:this.peticion.urlHost,\n    path:\"/usuarios/registro\",\n    payload:{\n      nombre:this.nombre,\n      email:this.email,\n      password:this.password,\n      confpassword:this.confpassword,\n      estado: 0\n  }}\n  this.peticion.Post(post.Host + post.path,post.payload).then((res:any) =>{\n    console.log(res)\n    if(res.state == true){\n\n      Swal.fire({\n        icon: \"success\",\n        title: \"Bienvenido!\",\n        text: res.mensaje,\n      });\n      \n\n      this.router.navigate([\"login\"])\n\n    }\n    else {\n\n      Swal.fire({\n        icon: \"error\",\n        title: \"Ouuch!\",\n        text: res.mensaje,\n      });\n    }\n    }\n  )\n}\n\n\n\n  viewpass(){\n    this.visible = !this.visible;\n    this.changetype = !this.changetype;\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAoBC,QAAwB,EAAWC,MAAa;IAAhD,KAAAD,QAAQ,GAARA,QAAQ;IAA2B,KAAAC,MAAM,GAANA,MAAM;IAS7D,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,KAAK,GAAO,EAAE;IACd,KAAAC,QAAQ,GAAO,EAAE;IACjB,KAAAC,YAAY,GAAO,EAAE;IACrB,KAAAC,KAAK,GAAS,EAAE;IAChB,KAAAC,OAAO,GAAW,IAAI;IACtB,KAAAC,UAAU,GAAU,IAAI;EAbxB;EAGAC,QAAQA,CAAA,GAER;EAWFC,SAASA,CAAA;IAEP,IAAIC,IAAI,GAAG;MACTC,IAAI,EAAC,IAAI,CAACZ,QAAQ,CAACa,OAAO;MAC1BC,IAAI,EAAC,oBAAoB;MACzBC,OAAO,EAAC;QACNb,MAAM,EAAC,IAAI,CAACA,MAAM;QAClBC,KAAK,EAAC,IAAI,CAACA,KAAK;QAChBC,QAAQ,EAAC,IAAI,CAACA,QAAQ;QACtBC,YAAY,EAAC,IAAI,CAACA,YAAY;QAC9BW,MAAM,EAAE;;KACV;IACF,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAACN,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACG,IAAI,EAACH,IAAI,CAACI,OAAO,CAAC,CAACG,IAAI,CAAEC,GAAO,IAAI;MACtEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAGA,GAAG,CAACG,KAAK,IAAI,IAAI,EAAC;QAEnBC,IAAI,CAACC,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,aAAa;UACpBC,IAAI,EAAER,GAAG,CAACS;SACX,CAAC;QAGF,IAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAEhC,MACI;QAEHN,IAAI,CAACC,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,QAAQ;UACfC,IAAI,EAAER,GAAG,CAACS;SACX,CAAC;;IAEJ,CAAC,CACF;EACH;EAIEE,QAAQA,CAAA;IACN,IAAI,CAACvB,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;IAC5B,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;CAED;AAjEYV,iBAAiB,GAAAiC,UAAA,EAL7BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWpC,iBAAiB,CAiE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}