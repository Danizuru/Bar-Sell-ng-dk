{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PeticionService {\n  constructor(http) {\n    this.http = http;\n    this.urlHost = \"http://localhost:3000\";\n  }\n  handleError(error) {\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong; please try again later.');\n  }\n  post(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('POST URL:', url);\n    return this.http.post(url, data).pipe(catchError(this.handleError));\n  }\n  put(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('PUT URL:', url);\n    return this.http.put(url, data).pipe(catchError(this.handleError));\n  }\n  delete(endpoint, data) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('DELETE URL:', url);\n    return this.http.request('delete', url, {\n      body: data\n    }).pipe(catchError(this.handleError));\n  }\n  get(endpoint) {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('GET URL:', url);\n    return this.http.get(url).pipe(catchError(this.handleError));\n  }\n  static #_ = this.ɵfac = function PeticionService_Factory(t) {\n    return new (t || PeticionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeticionService,\n    factory: PeticionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","PeticionService","constructor","http","urlHost","handleError","error","console","post","endpoint","data","url","log","pipe","put","delete","request","body","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\servicios\\peticion.service.ts"],"sourcesContent":["// import { HttpClient } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class PeticionService {\n\n//   constructor(private http: HttpClient) { }\n\n//   urlHost:string = 'http://localhost:3000'\n\n\n//   Post(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.post(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n//       })\n//     return promise\n//   }\n\n//   Put(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.put(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   delete(url:string, data:{}){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.delete(url,data).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n//   get(url:string){\n    \n//     let promise = new Promise ((resolve, reject) => {\n\n//       this.http.get(url).toPromise().then(\n//         (res:any) => {\n//           resolve(res)\n//         }\n//         ).catch((error) => {\n//           reject(error)\n//         })\n      \n\n//     })\n//     return promise\n//   }\n\n// }\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeticionService {\n  private urlHost: string = \"http://localhost:3000\";\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: any) {\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong; please try again later.');\n  }\n\n  post(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('POST URL:', url);\n    return this.http.post(url, data).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  put(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('PUT URL:', url);\n    return this.http.put(url, data).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  delete(endpoint: string, data: any): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('DELETE URL:', url);\n    return this.http.request('delete', url, { body: data }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  get(endpoint: string): Observable<any> {\n    const url = `${this.urlHost}${endpoint}`;\n    console.log('GET URL:', url);\n    return this.http.get(url).pipe(\n      catchError(this.handleError)\n    );\n  }\n}\n\n"],"mappings":"AAoFA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAW,uBAAuB;EAET;EAEhCC,WAAWA,CAACC,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOP,UAAU,CAAC,+CAA+C,CAAC;EACpE;EAEAS,IAAIA,CAACC,QAAgB,EAAEC,IAAS;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,GAAGK,QAAQ,EAAE;IACxCF,OAAO,CAACK,GAAG,CAAC,WAAW,EAAED,GAAG,CAAC;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACK,IAAI,CAACG,GAAG,EAAED,IAAI,CAAC,CAACG,IAAI,CACnCb,UAAU,CAAC,IAAI,CAACK,WAAW,CAAC,CAC7B;EACH;EAEAS,GAAGA,CAACL,QAAgB,EAAEC,IAAS;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,GAAGK,QAAQ,EAAE;IACxCF,OAAO,CAACK,GAAG,CAAC,UAAU,EAAED,GAAG,CAAC;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAACH,GAAG,EAAED,IAAI,CAAC,CAACG,IAAI,CAClCb,UAAU,CAAC,IAAI,CAACK,WAAW,CAAC,CAC7B;EACH;EAEAU,MAAMA,CAACN,QAAgB,EAAEC,IAAS;IAChC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,GAAGK,QAAQ,EAAE;IACxCF,OAAO,CAACK,GAAG,CAAC,aAAa,EAAED,GAAG,CAAC;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACa,OAAO,CAAC,QAAQ,EAAEL,GAAG,EAAE;MAAEM,IAAI,EAAEP;IAAI,CAAE,CAAC,CAACG,IAAI,CAC1Db,UAAU,CAAC,IAAI,CAACK,WAAW,CAAC,CAC7B;EACH;EAEAa,GAAGA,CAACT,QAAgB;IAClB,MAAME,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,GAAGK,QAAQ,EAAE;IACxCF,OAAO,CAACK,GAAG,CAAC,UAAU,EAAED,GAAG,CAAC;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACe,GAAG,CAACP,GAAG,CAAC,CAACE,IAAI,CAC5Bb,UAAU,CAAC,IAAI,CAACK,WAAW,CAAC,CAC7B;EACH;EAAC,QAAAc,CAAA,G;qBAxCUlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}