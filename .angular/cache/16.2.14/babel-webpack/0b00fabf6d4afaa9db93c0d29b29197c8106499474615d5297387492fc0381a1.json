{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProductosComponent = class ProductosComponent {\n  constructor(peticion) {\n    this.peticion = peticion;\n    this.cod_prod = \"\";\n    this.nombre = \"\";\n    this.estado = 1;\n    this.datos = [];\n    this.Idseleccionado = \"\";\n  }\n  // constructor (private peticionService:PeticionService){}\n  ngOnInit() {\n    this.cargarTodas();\n  }\n  cargarTodas() {\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"productos/listar\",\n      payload: {}\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      this.datos = res.data;\n    });\n  }\n  AbrirModal() {\n    this.cod_prod = \"\";\n    this.nombre = \"\";\n    this.estado = 1;\n    $('#modalNuevo').modal('show');\n  }\n  Guardar() {\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"productos/save\",\n      payload: {\n        cod_prod: this.cod_prod,\n        nombre: this.nombre,\n        estado: this.estado\n      }\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      if (res.state == true) {\n        $('#modalNuevo').modal('hide');\n        this.cargarTodas();\n      }\n    });\n  }\n  EditarId(id) {\n    this, this.Idseleccionado = id;\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"productos/listarid\",\n      payload: {\n        _id: id\n      }\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      this.cod_prod = res.data[0].cod_prod;\n      this.nombre = res.data[0].nombre;\n      this.estado = res.data[0].estado;\n      $('#modalNuevo').modal('show');\n    });\n  }\n  Eliminar() {\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"productos/delete\",\n      payload: {\n        _id: this.Idseleccionado\n      }\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      if (res.state == true) {\n        $('#modalNuevo').modal('hide');\n        this.cargarTodas();\n      }\n    });\n  }\n  Actualizar() {\n    let post = {\n      host: this.peticion.urlHost,\n      path: \"productos/update\",\n      payload: {\n        _id: this.Idseleccionado,\n        nombre: this.nombre,\n        estado: this.estado\n      }\n    };\n    this.peticion.Post(post.host + post.path, post.payload).then(res => {\n      console.log(res);\n      if (res.state == true) {\n        $('#modalNuevo').modal('hide');\n        this.cargarTodas();\n      }\n    });\n  }\n};\nProductosComponent = __decorate([Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})], ProductosComponent);","map":{"version":3,"names":["Component","ProductosComponent","constructor","peticion","cod_prod","nombre","estado","datos","Idseleccionado","ngOnInit","cargarTodas","post","host","urlHost","path","payload","Post","then","res","console","log","data","AbrirModal","$","modal","Guardar","state","EditarId","id","_id","Eliminar","Actualizar","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\daniz\\Desktop\\Angular\\my-app\\src\\app\\component\\productos\\productos.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { PeticionService } from 'src/app/servicios/peticion.service';\n// import { PeticionService } from 'src/app/servicios/peticion.service';\n\n\ndeclare let $:any\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent {\n\n  constructor (private peticion:PeticionService){}\n  // constructor (private peticionService:PeticionService){}\n\n  ngOnInit(): void {\n    this.cargarTodas()\n  }\n\n  \n\n  cod_prod:string = \"\"\n  nombre:string = \"\"\n  estado:number = 1\n  datos:any = []\n  Idseleccionado:String =\"\"\n\n  cargarTodas(){\n\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"productos/listar\",\n      payload:{\n      }\n    }\n  this.peticion.Post(post.host+post.path, post.payload).then(\n    (res:any) => {\n      console.log(res)\n      this.datos = res.data\n    }\n  )\n  }\n  AbrirModal(){\n    this.cod_prod = \"\"\n    this.nombre = \"\"\n    this.estado = 1\n    $('#modalNuevo').modal('show')\n  }\n  Guardar(){\n\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"productos/save\",\n      payload:{\n        cod_prod:this.cod_prod,\n        nombre:this.nombre,\n        estado:this.estado\n      }\n    }\n  this.peticion.Post(post.host+post.path, post.payload).then(\n    (res:any) => {\n      console.log(res)\n      if(res.state == true){\n        $('#modalNuevo').modal('hide')\n        this.cargarTodas()\n      }})\n  }\n  EditarId(id:string){\n    this,this.Idseleccionado =id\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"productos/listarid\",\n      payload:{\n        _id:id\n      }\n    }\n  this.peticion.Post(post.host+post.path, post.payload).then(\n    (res:any) => {\n      console.log(res)\n      this.cod_prod = res.data[0].cod_prod\n      this.nombre = res.data[0].nombre\n      this.estado = res.data[0].estado\n      $('#modalNuevo').modal('show')\n    }\n  )\n    \n  }\n  Eliminar(){\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"productos/delete\",\n      payload:{\n        _id:this.Idseleccionado\n      }\n    }\n    this.peticion.Post(post.host+post.path, post.payload).then(\n      (res:any) => {\n        console.log(res)\n        if(res.state == true){\n          $('#modalNuevo').modal('hide')\n          this.cargarTodas()\n        }})\n  }\n  Actualizar(){\n\n    let post = {\n      host:this.peticion.urlHost,\n      path:\"productos/update\",\n      payload:{\n        _id:this.Idseleccionado,\n        nombre:this.nombre,\n        estado:this.estado\n      }\n    }\n  this.peticion.Post(post.host+post.path, post.payload).then(\n    (res:any) => {\n      console.log(res)\n      if(res.state == true){\n        $('#modalNuevo').modal('hide')\n        this.cargarTodas()\n      }})\n  }\n\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}